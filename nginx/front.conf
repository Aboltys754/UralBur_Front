client_max_body_size 50m;

server {
  listen 80;
  listen 443 ssl;

  server_name ubp2a2.ru www.ubp2a2.ru;

  root   /usr/share/nginx/html;

  # Полностью удаляет заголовки Server и X-Powered-By (не работает)
  # more_clear_headers 'Server' 'X-Powered-By';

  # Включаем перехват ошибок на уровне server
#  proxy_intercept_errors on;
# error_page 403 =404 @backend_404;
  
  ssl_certificate /etc/letsencrypt/live/ubp2a2.ru/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/ubp2a2.ru/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # Редирект HTTP → HTTPS (приоритетный)
  if ($scheme = http) {
    return 301 https://ubp2a2.ru$request_uri;
  }
  # Редирект www → без www
  if ($host ~ ^www\.) {
    return 301 https://ubp2a2.ru$request_uri;
  }
  # Добавление слеша для корня
  if ($request_uri ~ ^\?[^\s]*$) {
    return 301 https://ubp2a2.ru/$is_args$args;
  }
  if ($args ~* "(dns=|FUZZ|XDEBUG_SESSION_START|phpinfo)") {
    return 301 https://ubp2a2.ru/;
  }

  # запретить выполнение команд через URL - это очень строгое правило!!!
#  if ($request_uri ~* "(;|\||\`|>|<|&|wget|curl|sh|bash|python|perl)") {
#    return 403;
#  }
  # блокировка User-Agent
  #if ($http_user_agent ~* (wget|curl|bash|python|perl|nikto|sqlmap|nmap|scan|httpie)) {
  #  return 403;
  #}
  # блокировка явных попыток RCE (Remote Code Exception) в URL
  if ($request_uri ~* (\/shell|\/bin\/sh|\/cmd\/|\/bash$|\.sh$|\.py$|\|wget\||\|\s*curl\||\;bash)) {
    return 403;
  }
  # блокировка подозрительных параметров
  if ($query_string ~* (cmd=|exec=|wget=|curl=)) {
    return 403;
  }

  # Security headers
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "strict-origin-when-cross-origin";  

  location /.well-known/acme-challenge/ { root /var/www/certbot; }

  # включение Gzip
  gzip on;
  gzip_min_length 1024;
  gzip_comp_level 6;
  gzip_types text/plain text/css application/json application/javascript text/xml text/javascript
  gzip_vary on;
  gzip_proxied any;
  gzip_disable "msie6";

  include /etc/nginx/mime.types;
  types {
      application/javascript js mjs;
  }

  # ограничение доступа к /tmp и другим критичным папкам
  location ~ ^/(tmp|etc|var|root) {
    deny all;
  }

  # custom error page
  error_page 404 /404.html;
  location = /404.html {
    proxy_pass http://react:3333;
  }

  location /api/mauth/ {
    proxy_pass http://mauth_app:3001;
  }

  location /api/mcontent/ {
    proxy_pass http://mcontent_app:3020;
  }

  location /admin/ {
    # Применяем зону "ddos" с burst-буфером на 5 запросов
    limit_req zone=ddos burst=20 nodelay;
    limit_req_status 429;  # Возвращать 429 (Too Many Requests)

    proxy_pass http://cms:80;
    # исключение кеширование для админки
    #	proxy_no_cache 1;
    #	proxy_cache_bypass 1;
  }

  # запрос библиотеки pdfjs
  location /libs/ {
    proxy_pass http://cms:80;
  }

  location ~^/static {
     proxy_pass http://cms:80;
  }

  location ~^/ionicons {
     proxy_pass http://cms:80;
  }

  location /sitemap/ {
    limit_except GET {
      deny all;
    }

    proxy_pass http://sitemap_maker:3150;
  }

  location ~\.js|css|ico|woff2|txt|svg|ttf|webp$ {
    proxy_pass http://react:3333;
	
	# кеширование статики
  # nginx кеш
	proxy_cache static_cache;
	proxy_cache_key "$scheme$host$request_uri";
  proxy_cache_valid 200 30d; # кешировать на 30 дней
  # браузерный кеш
	expires 30d;
	add_header Cache-Control "public, immutable, max-age=2592000";
	add_header X-Cache-Status $upstream_cache_status;
  }
  
  location ~^/search.html {
    limit_except GET {
      deny all;
    }

    proxy_pass http://react:3333;
  }

  # обращение на "site.com/" строго со слешем в конце
  location = / {
    limit_except GET {
      deny all;
    }

    proxy_pass http://pssr:3250;
#    proxy_pass http://react:3333;
  }

  # запрос любого .html файла
  location ~\.html$ {
    limit_except GET {
      deny all;
    }

    proxy_pass http://pssr:3250;
#    proxy_pass http://react:3333;
  }

  # все остальные запросы
  location / {
    limit_except GET {
      deny all;
    }
    proxy_pass http://react:3333;
  }

}
